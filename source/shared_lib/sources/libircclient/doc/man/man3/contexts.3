.TH "Managing contexts." 3 "10 Jan 2009" "Version 1.3" "libircclient" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Managing contexts. \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBirc_set_ctx\fP (\fBirc_session_t\fP *session, void *ctx)"
.br
.RI "\fISets the IRC session context. \fP"
.ti -1c
.RI "void * \fBirc_get_ctx\fP (\fBirc_session_t\fP *session)"
.br
.RI "\fIReturns the IRC session context. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "void * irc_get_ctx (\fBirc_session_t\fP * session)"
.PP
Returns the IRC session context. 
.PP
\fBParameters:\fP
.RS 4
\fIsession\fP An initiated session.
.RE
.PP
This function returns the IRC session context, which was set by \fBirc_set_ctx()\fP. If no context was set, this function returns NULL.
.PP
\fBSee also:\fP
.RS 4
\fBirc_set_ctx\fP 
.RE
.PP

.SS "void irc_set_ctx (\fBirc_session_t\fP * session, void * ctx)"
.PP
Sets the IRC session context. 
.PP
\fBParameters:\fP
.RS 4
\fIsession\fP An initiated session. 
.br
\fIctx\fP A context.
.RE
.PP
This function sets the user-defined context for this IRC session. This context is not used by libircclient. Its purpose is to store session-specific user data, which may be obtained later by calling \fBirc_get_ctx()\fP. Note that libircclient just 'carries out' this pointer. If you allocate some memory, and store its address in ctx (most common usage), it is your responsibility to free it before calling \fBirc_destroy_session()\fP.
.PP
\fBSee also:\fP
.RS 4
\fBirc_get_ctx\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libircclient from the source code.
